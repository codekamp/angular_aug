{"version":3,"file":"tabs.es5.js","sources":["../../../src/lib/tabs/index.ts","../../../src/lib/tabs/tabs-module.ts","../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../../src/lib/tabs/tab-header.ts","../../../src/lib/tabs/tab-label-wrapper.ts","../../../src/lib/tabs/tab-group.ts","../../../src/lib/tabs/tab-body.ts","../../../src/lib/tabs/tab.ts","../../../src/lib/tabs/tab-label.ts","../../../src/lib/tabs/ink-bar.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {MdInkBar,MdTabBody,MdTabBodyOriginState,MdTabBodyPositionState,MdTabHeader,ScrollDirection,MdTabLabelWrapper,MdTab,MdTabLabel,MdTabNav,MdTabLink,MdTabsModule,MdTabChangeEvent,MdTabHeaderPosition,MdTabGroupBase,_MdTabGroupMixinBase,MdTabGroup,MatInkBar,MatTab,MatTabBody,MatTabBodyOriginState,MatTabBodyPositionState,MatTabChangeEvent,MatTabGroup,MatTabGroupBase,MatTabHeader,MatTabHeaderPosition,MatTabLabel,MatTabLabelWrapper,MatTabLink,MatTabNav,MatTabsModule} from './public_api';\n\nexport {MdTabBase as ɵe,_MdTabMixinBase as ɵf} from './tab';\nexport {MdTabHeaderBase as ɵa,_MdTabHeaderMixinBase as ɵb} from './tab-header';\nexport {MdTabLabelWrapperBase as ɵc,_MdTabLabelWrapperMixinBase as ɵd} from './tab-label-wrapper';\nexport {MdTabLinkBase as ɵi,MdTabNavBase as ɵg,_MdTabLinkMixinBase as ɵj,_MdTabNavMixinBase as ɵh} from './tab-nav-bar/tab-nav-bar';","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollDispatchModule, VIEWPORT_RULER_PROVIDER} from '@angular/cdk/scrolling';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MdCommonModule, MdRippleModule} from '@angular/material/core';\nimport {MdInkBar} from './ink-bar';\nimport {MdTab} from './tab';\nimport {MdTabBody} from './tab-body';\nimport {MdTabGroup} from './tab-group';\nimport {MdTabHeader} from './tab-header';\nimport {MdTabLabel} from './tab-label';\nimport {MdTabLabelWrapper} from './tab-label-wrapper';\nimport {MdTabLink, MdTabNav} from './tab-nav-bar/tab-nav-bar';\nexport class MdTabsModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    MdCommonModule,\n    PortalModule,\n    MdRippleModule,\n    ObserversModule,\n    ScrollDispatchModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MdCommonModule,\n    MdTabGroup,\n    MdTabLabel,\n    MdTab,\n    MdTabNav,\n    MdTabLink,\n  ],\n  declarations: [\n    MdTabGroup,\n    MdTabLabel,\n    MdTab,\n    MdInkBar,\n    MdTabLabelWrapper,\n    MdTabNav,\n    MdTabLink,\n    MdTabBody,\n    MdTabHeader\n  ],\n  providers: [VIEWPORT_RULER_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdTabsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Platform} from '@angular/cdk/platform';\nimport {auditTime, takeUntil} from '@angular/cdk/rxjs';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanDisable,\n  CanDisableRipple, MATERIAL_COMPATIBILITY_MODE,\n  MD_RIPPLE_GLOBAL_OPTIONS,\n  MdRipple,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  RippleGlobalOptions,\n  ThemePalette,\n} from '@angular/material/core';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\nimport {merge} from 'rxjs/observable/merge';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {Subject} from 'rxjs/Subject';\nimport {MdInkBar} from '../ink-bar';\n/**\n * \\@docs-private\n */\nexport class MdTabNavBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdTabNavBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabNavBase.prototype._renderer;\n/** @type {?} */\nMdTabNavBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdTabNavMixinBase = mixinDisableRipple(mixinColor(MdTabNavBase, 'primary'));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nexport class MdTabNav extends _MdTabNavMixinBase implements AfterContentInit, CanColor,\n    CanDisableRipple, OnDestroy {\n/**\n * Subject that emits when the component has been destroyed.\n */\nprivate _onDestroy = new Subject<void>();\n\n  _activeLinkChanged: boolean;\n  _activeLinkElement: ElementRef;\n\n   _inkBar: MdInkBar;\n/**\n * Query list of all tab links of the tab navigation.\n */\n_tabLinks: QueryList<MdTabLink>;\n/**\n * Background color of the tab nav.\n * @return {?}\n */\nget backgroundColor(): ThemePalette { return this._backgroundColor; }\n/**\n * @param {?} value\n * @return {?}\n */\nset backgroundColor(value: ThemePalette) {\n    let /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n\n    this._renderer.removeClass(nativeElement, `mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      this._renderer.addClass(nativeElement, `mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\nprivate _backgroundColor: ThemePalette;\n/**\n * Whether ripples should be disabled for all links or not.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\n    this._disableRipple = coerceBooleanProperty(value);\n    this._setLinkDisableRipple();\n  }\nprivate _disableRipple: boolean = false;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _dir\n * @param {?} _ngZone\n * @param {?} _changeDetectorRef\n */\nconstructor(renderer: Renderer2,\n              elementRef: ElementRef,\nprivate _dir: Directionality,\nprivate _ngZone: NgZone,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    super(renderer, elementRef);\n  }\n/**\n * Notifies the component that the active link has been changed.\n * @param {?} element\n * @return {?}\n */\nupdateActiveLink(element: ElementRef) {\n    this._activeLinkChanged = this._activeLinkElement != element;\n    this._activeLinkElement = element;\n\n    if (this._activeLinkChanged) {\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    this._ngZone.runOutsideAngular(() => {\n      let /** @type {?} */ dirChange = this._dir ? this._dir.change : observableOf(null);\n      let /** @type {?} */ resize = typeof window !== 'undefined' ?\n          auditTime.call(fromEvent(window, 'resize'), 10) :\n          observableOf(null);\n\n      return takeUntil.call(merge(dirChange, resize), this._onDestroy).subscribe(() => {\n        this._alignInkBar();\n      });\n    });\n\n    this._setLinkDisableRipple();\n  }\n/**\n * Checks if the active link has been changed and, if so, will update the ink bar.\n * @return {?}\n */\nngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      this._alignInkBar();\n      this._activeLinkChanged = false;\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n/**\n * Aligns the ink bar to the active link.\n * @return {?}\n */\n_alignInkBar(): void {\n    if (this._activeLinkElement) {\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    }\n  }\n/**\n * Sets the `disableRipple` property on each link of the navigation bar.\n * @return {?}\n */\nprivate _setLinkDisableRipple() {\n    if (this._tabLinks) {\n      this._tabLinks.forEach(link => link.disableRipple = this.disableRipple);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[md-tab-nav-bar], [mat-tab-nav-bar]',\n  inputs: ['color', 'disableRipple'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {'class': 'mat-tab-nav-bar'},\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [{provide: MATERIAL_COMPATIBILITY_MODE, useValue: true}],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: NgZone, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_inkBar': [{ type: ViewChild, args: [MdInkBar, ] },],\n'_tabLinks': [{ type: ContentChildren, args: [forwardRef(() => MdTabLink), {descendants: true}, ] },],\n'backgroundColor': [{ type: Input },],\n};\n}\n\nfunction MdTabNav_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabNav.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabNav.ctorParameters;\n/** @type {?} */\nMdTabNav.propDecorators;\n/**\n * Subject that emits when the component has been destroyed.\n * @type {?}\n */\nMdTabNav.prototype._onDestroy;\n/** @type {?} */\nMdTabNav.prototype._activeLinkChanged;\n/** @type {?} */\nMdTabNav.prototype._activeLinkElement;\n/** @type {?} */\nMdTabNav.prototype._inkBar;\n/**\n * Query list of all tab links of the tab navigation.\n * @type {?}\n */\nMdTabNav.prototype._tabLinks;\n/** @type {?} */\nMdTabNav.prototype._backgroundColor;\n/** @type {?} */\nMdTabNav.prototype._disableRipple;\n/** @type {?} */\nMdTabNav.prototype._dir;\n/** @type {?} */\nMdTabNav.prototype._ngZone;\n/** @type {?} */\nMdTabNav.prototype._changeDetectorRef;\n}\n\nexport class MdTabLinkBase {}\nexport const /** @type {?} */ _MdTabLinkMixinBase = mixinDisabled(MdTabLinkBase);\n/**\n * Link inside of a `md-tab-nav-bar`.\n */\nexport class MdTabLink extends _MdTabLinkMixinBase implements OnDestroy, CanDisable {\n/**\n * Whether the tab link is active or not.\n */\nprivate _isActive: boolean = false;\n/**\n * Whether the ripples for this tab should be disabled or not.\n */\nprivate _disableRipple: boolean = false;\n/**\n * Reference to the instance of the ripple for the tab link.\n */\nprivate _tabLinkRipple: MdRipple;\n/**\n * Whether the link is active.\n * @return {?}\n */\nget active(): boolean { return this._isActive; }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n    this._isActive = value;\n    if (value) {\n      this._mdTabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n/**\n * Whether ripples should be disabled or not.\n * @return {?}\n */\nget disableRipple(): boolean { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\n    this._disableRipple = value;\n    this._tabLinkRipple.disabled = this.disableRipple;\n    this._tabLinkRipple._updateRippleRenderer();\n  }\n/**\n * \\@docs-private\n * @return {?}\n */\nget tabIndex(): number {\n    return this.disabled ? -1 : 0;\n  }\n/**\n * @param {?} _mdTabNavBar\n * @param {?} _elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} platform\n * @param {?} globalOptions\n */\nconstructor(private _mdTabNavBar: MdTabNav,\nprivate _elementRef: ElementRef,\n              ngZone: NgZone,\n              ruler: ViewportRuler,\n              platform: Platform,\n                globalOptions: RippleGlobalOptions) {\n    super();\n\n    // Manually create a ripple instance that uses the tab link element as trigger element.\n    // Notice that the lifecycle hooks for the ripple config won't be called anymore.\n    this._tabLinkRipple = new MdRipple(_elementRef, ngZone, ruler, platform, globalOptions);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // Manually call the ngOnDestroy lifecycle hook of the ripple instance because it won't be\n    // called automatically since its instance is not created by Angular.\n    this._tabLinkRipple.ngOnDestroy();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tab-link], [mat-tab-link], [mdTabLink], [matTabLink]',\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.tabindex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdTabNav, },\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input },],\n};\n}\n\nfunction MdTabLink_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLink.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLink.ctorParameters;\n/** @type {?} */\nMdTabLink.propDecorators;\n/**\n * Whether the tab link is active or not.\n * @type {?}\n */\nMdTabLink.prototype._isActive;\n/**\n * Whether the ripples for this tab should be disabled or not.\n * @type {?}\n */\nMdTabLink.prototype._disableRipple;\n/**\n * Reference to the instance of the ripple for the tab link.\n * @type {?}\n */\nMdTabLink.prototype._tabLinkRipple;\n/** @type {?} */\nMdTabLink.prototype._mdTabNavBar;\n/** @type {?} */\nMdTabLink.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE} from '@angular/cdk/keycodes';\nimport {auditTime, startWith} from '@angular/cdk/rxjs';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanDisableRipple, MATERIAL_COMPATIBILITY_MODE,\n  mixinDisableRipple\n} from '@angular/material/core';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\nimport {merge} from 'rxjs/observable/merge';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MdInkBar} from './ink-bar';\nimport {MdTabLabelWrapper} from './tab-label-wrapper';\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * \\@docs-private\n */\nexport class MdTabHeaderBase {}\nexport const /** @type {?} */ _MdTabHeaderMixinBase = mixinDisableRipple(MdTabHeaderBase);\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nexport class MdTabHeader extends _MdTabHeaderMixinBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy, CanDisableRipple {\n\n   _labelWrappers: QueryList<MdTabLabelWrapper>;\n   _inkBar: MdInkBar;\n   _tabListContainer: ElementRef;\n   _tabList: ElementRef;\n/**\n * The tab index that is focused.\n */\nprivate _focusIndex: number = 0;\n/**\n * The distance in pixels that the tab labels should be translated to the left.\n */\nprivate _scrollDistance = 0;\n/**\n * Whether the header should scroll to the selected index after the view has been checked.\n */\nprivate _selectedIndexChanged = false;\n/**\n * Combines listeners that will re-align the ink bar whenever they're invoked.\n */\nprivate _realignInkBar = Subscription.EMPTY;\n/**\n * Whether the controls for pagination should be displayed\n */\n_showPaginationControls = false;\n/**\n * Whether the tab list can be scrolled more towards the end of the tab label list.\n */\n_disableScrollAfter = true;\n/**\n * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n */\n_disableScrollBefore = true;\n/**\n * The number of tab labels that are displayed on the header. When this changes, the header\n * should re-evaluate the scroll position.\n */\nprivate _tabLabelCount: number;\n/**\n * Whether the scroll distance has changed and should be applied after the view is checked.\n */\nprivate _scrollDistanceChanged: boolean;\nprivate _selectedIndex: number = 0;\n/**\n * The index of the active tab.\n * @return {?}\n */\nget selectedIndex(): number { return this._selectedIndex; }\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number) {\n    this._selectedIndexChanged = this._selectedIndex != value;\n    this._selectedIndex = value;\n    this._focusIndex = value;\n  }\n/**\n * Event emitted when the option is selected.\n */\nselectFocusedIndex = new EventEmitter();\n/**\n * Event emitted when a label is focused.\n */\nindexFocused = new EventEmitter();\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _changeDetectorRef\n * @param {?} _dir\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _dir: Directionality) {\n    super();\n  }\n/**\n * @return {?}\n */\nngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._labelWrappers.length) {\n      this._updatePagination();\n      this._tabLabelCount = this._labelWrappers.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case RIGHT_ARROW:\n        this._focusNextTab();\n        break;\n      case LEFT_ARROW:\n        this._focusPreviousTab();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        event.preventDefault();\n        break;\n    }\n  }\n/**\n * Aligns the ink bar to the selected tab on load.\n * @return {?}\n */\nngAfterContentInit() {\n    const /** @type {?} */ dirChange = this._dir ? this._dir.change : observableOf(null);\n    const /** @type {?} */ resize = typeof window !== 'undefined' ?\n        auditTime.call(fromEvent(window, 'resize'), 150) :\n        observableOf(null);\n\n    this._realignInkBar = startWith.call(merge(dirChange, resize), null).subscribe(() => {\n      this._updatePagination();\n      this._alignInkBarToSelectedTab();\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._realignInkBar.unsubscribe();\n  }\n/**\n * Callback for when the MutationObserver detects that the content has changed.\n * @return {?}\n */\n_onContentChanges() {\n    this._updatePagination();\n    this._alignInkBarToSelectedTab();\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Updating the view whether pagination should be enabled or not\n * @return {?}\n */\n_updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n/**\n * When the focus index is set, we must manually send focus to the correct label\n * @param {?} value\n * @return {?}\n */\nset focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this._focusIndex == value) { return; }\n\n    this._focusIndex = value;\n    this.indexFocused.emit(value);\n    this._setTabFocus(value);\n  }\n/**\n * Tracks which element has focus; used for keyboard navigation\n * @return {?}\n */\nget focusIndex(): number { return this._focusIndex; }\n/**\n * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n * providing a valid index and return true.\n * @param {?} index\n * @return {?}\n */\n_isValidIndex(index: number): boolean {\n    if (!this._labelWrappers) { return true; }\n\n    const /** @type {?} */ tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n/**\n * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n * scrolling is enabled.\n * @param {?} tabIndex\n * @return {?}\n */\n_setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._labelWrappers && this._labelWrappers.length) {\n      this._labelWrappers.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const /** @type {?} */ containerEl = this._tabListContainer.nativeElement;\n      const /** @type {?} */ dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n/**\n * Moves the focus towards the beginning or the end of the list depending on the offset provided.\n * Valid offsets are 1 and -1.\n * @param {?} offset\n * @return {?}\n */\n_moveFocus(offset: number) {\n    if (this._labelWrappers) {\n      const /** @type {?} */ tabs: MdTabLabelWrapper[] = this._labelWrappers.toArray();\n\n      for (let /** @type {?} */ i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {\n        if (this._isValidIndex(i)) {\n          this.focusIndex = i;\n          return;\n        }\n      }\n    }\n  }\n/**\n * Increment the focus index by 1 until a valid tab is found.\n * @return {?}\n */\n_focusNextTab(): void {\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? 1 : -1);\n  }\n/**\n * Decrement the focus index by 1 until a valid tab is found.\n * @return {?}\n */\n_focusPreviousTab(): void {\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? -1 : 1);\n  }\n/**\n * The layout direction of the containing app.\n * @return {?}\n */\n_getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n/**\n * Performs the CSS transformation on the tab list that will cause the list to scroll.\n * @return {?}\n */\n_updateTabScrollPosition() {\n    const /** @type {?} */ scrollDistance = this.scrollDistance;\n    const /** @type {?} */ translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    this._renderer.setStyle(this._tabList.nativeElement, 'transform',\n        `translate3d(${translateX}px, 0, 0)`);\n  }\n/**\n * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n * @param {?} v\n * @return {?}\n */\nset scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n/**\n * @return {?}\n */\nget scrollDistance(): number { return this._scrollDistance; }\n/**\n * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n * the end of the list, respectively). The distance to scroll is computed to be a third of the\n * length of the tab list view window.\n * \n * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n * should be called sparingly.\n * @param {?} scrollDir\n * @return {?}\n */\n_scrollHeader(scrollDir: ScrollDirection) {\n    const /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\n  }\n/**\n * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n * \n * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n * should be called sparingly.\n * @param {?} labelIndex\n * @return {?}\n */\n_scrollToLabel(labelIndex: number) {\n    const /** @type {?} */ selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) { return; }\n\n    // The view length is the visible width of the tab labels.\n    const /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    let /** @type {?} */ labelBeforePos: number, /** @type {?} */ labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = selectedLabel.getOffsetLeft();\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n    }\n\n    const /** @type {?} */ beforeVisiblePos = this.scrollDistance;\n    const /** @type {?} */ afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n/**\n * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n * tab list is wider than the size of the header container, then the pagination controls should\n * be shown.\n * \n * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n * should be called sparingly.\n * @return {?}\n */\n_checkPaginationEnabled() {\n    const /** @type {?} */ isEnabled =\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n/**\n * Evaluate whether the before and after controls should be enabled or disabled.\n * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n * before button. If the header is at the end of the list (scroll distance is equal to the\n * maximum distance we can scroll), then disable the after button.\n * \n * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n * should be called sparingly.\n * @return {?}\n */\n_checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n * is equal to the difference in width between the tab list container and tab header container.\n * \n * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n * should be called sparingly.\n * @return {?}\n */\n_getMaxScrollDistance(): number {\n    const /** @type {?} */ lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n/**\n * Tells the ink-bar to align itself to the current label wrapper\n * @return {?}\n */\nprivate _alignInkBarToSelectedTab(): void {\n    const /** @type {?} */ selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n        this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n        null;\n\n    this._inkBar.alignToElement(selectedLabelWrapper);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab-header, mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n  viewProviders: [{provide: MATERIAL_COMPATIBILITY_MODE, useValue: true}],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ChangeDetectorRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_labelWrappers': [{ type: ContentChildren, args: [MdTabLabelWrapper, ] },],\n'_inkBar': [{ type: ViewChild, args: [MdInkBar, ] },],\n'_tabListContainer': [{ type: ViewChild, args: ['tabListContainer', ] },],\n'_tabList': [{ type: ViewChild, args: ['tabList', ] },],\n'selectedIndex': [{ type: Input },],\n'selectFocusedIndex': [{ type: Output },],\n'indexFocused': [{ type: Output },],\n};\n}\n\nfunction MdTabHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabHeader.ctorParameters;\n/** @type {?} */\nMdTabHeader.propDecorators;\n/** @type {?} */\nMdTabHeader.prototype._labelWrappers;\n/** @type {?} */\nMdTabHeader.prototype._inkBar;\n/** @type {?} */\nMdTabHeader.prototype._tabListContainer;\n/** @type {?} */\nMdTabHeader.prototype._tabList;\n/**\n * The tab index that is focused.\n * @type {?}\n */\nMdTabHeader.prototype._focusIndex;\n/**\n * The distance in pixels that the tab labels should be translated to the left.\n * @type {?}\n */\nMdTabHeader.prototype._scrollDistance;\n/**\n * Whether the header should scroll to the selected index after the view has been checked.\n * @type {?}\n */\nMdTabHeader.prototype._selectedIndexChanged;\n/**\n * Combines listeners that will re-align the ink bar whenever they're invoked.\n * @type {?}\n */\nMdTabHeader.prototype._realignInkBar;\n/**\n * Whether the controls for pagination should be displayed\n * @type {?}\n */\nMdTabHeader.prototype._showPaginationControls;\n/**\n * Whether the tab list can be scrolled more towards the end of the tab label list.\n * @type {?}\n */\nMdTabHeader.prototype._disableScrollAfter;\n/**\n * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n * @type {?}\n */\nMdTabHeader.prototype._disableScrollBefore;\n/**\n * The number of tab labels that are displayed on the header. When this changes, the header\n * should re-evaluate the scroll position.\n * @type {?}\n */\nMdTabHeader.prototype._tabLabelCount;\n/**\n * Whether the scroll distance has changed and should be applied after the view is checked.\n * @type {?}\n */\nMdTabHeader.prototype._scrollDistanceChanged;\n/** @type {?} */\nMdTabHeader.prototype._selectedIndex;\n/**\n * Event emitted when the option is selected.\n * @type {?}\n */\nMdTabHeader.prototype.selectFocusedIndex;\n/**\n * Event emitted when a label is focused.\n * @type {?}\n */\nMdTabHeader.prototype.indexFocused;\n/** @type {?} */\nMdTabHeader.prototype._elementRef;\n/** @type {?} */\nMdTabHeader.prototype._renderer;\n/** @type {?} */\nMdTabHeader.prototype._changeDetectorRef;\n/** @type {?} */\nMdTabHeader.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\n/**\n * \\@docs-private\n */\nexport class MdTabLabelWrapperBase {}\nexport const /** @type {?} */ _MdTabLabelWrapperMixinBase = mixinDisabled(MdTabLabelWrapperBase);\n/**\n * Used in the `md-tab-group` view to display tab labels.\n * \\@docs-private\n */\nexport class MdTabLabelWrapper extends _MdTabLabelWrapperMixinBase implements CanDisable {\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) {\n    super();\n  }\n/**\n * Sets focus on the wrapper element\n * @return {?}\n */\nfocus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n/**\n * @return {?}\n */\ngetOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n/**\n * @return {?}\n */\ngetOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdTabLabelWrapper], [matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction MdTabLabelWrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLabelWrapper.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLabelWrapper.ctorParameters;\n/** @type {?} */\nMdTabLabelWrapper.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ViewChild,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  QueryList,\n  ContentChildren,\n  ElementRef,\n  Renderer2,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  AfterViewChecked,\n  AfterContentInit,\n  AfterContentChecked,\n  OnDestroy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MdTab} from './tab';\nimport {merge} from 'rxjs/observable/merge';\nimport {\n  CanDisableRipple, MATERIAL_COMPATIBILITY_MODE,\n  mixinDisableRipple\n} from '@angular/material/core';\nimport {CanColor, mixinColor, ThemePalette} from '@angular/material/core';\n/**\n * Used to generate unique ID's for each tab component\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nexport class MdTabChangeEvent {\n  index: number;\n  tab: MdTab;\n}\n\nfunction MdTabChangeEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabChangeEvent.prototype.index;\n/** @type {?} */\nMdTabChangeEvent.prototype.tab;\n}\n\n\n/** Possible positions for the tab header. */\nexport type MdTabHeaderPosition = 'above' | 'below';\n/**\n * \\@docs-private\n */\nexport class MdTabGroupBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdTabGroupBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabGroupBase.prototype._renderer;\n/** @type {?} */\nMdTabGroupBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdTabGroupMixinBase = mixinColor(mixinDisableRipple(MdTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://www.google.com/design/spec/components/tabs.html\n */\nexport class MdTabGroup extends _MdTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, AfterViewChecked, OnDestroy, CanColor, CanDisableRipple {\n\n   _tabs: QueryList<MdTab>;\n\n   _tabBodyWrapper: ElementRef;\n/**\n * Whether this component has been initialized.\n */\nprivate _isInitialized: boolean = false;\n/**\n * The tab index that should be selected after the content has been checked.\n */\nprivate _indexToSelect: number | null = 0;\n/**\n * Snapshot of the height of the tab body wrapper before another tab is activated.\n */\nprivate _tabBodyWrapperHeight: number = 0;\n/**\n * Subscription to tabs being added/removed.\n */\nprivate _tabsSubscription = Subscription.EMPTY;\n/**\n * Subscription to changes in the tab labels.\n */\nprivate _tabLabelSubscription = Subscription.EMPTY;\n/**\n * Whether the tab group should grow to the size of the active tab.\n * @return {?}\n */\nget dynamicHeight(): boolean { return this._dynamicHeight; }\n/**\n * @param {?} value\n * @return {?}\n */\nset dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\nprivate _dynamicHeight: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _dynamicHeightDeprecated(): boolean { return this._dynamicHeight; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _dynamicHeightDeprecated(value: boolean) { this._dynamicHeight = value; }\n/**\n * The index of the active tab.\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number | null) { this._indexToSelect = value; }\n/**\n * @return {?}\n */\nget selectedIndex(): number | null { return this._selectedIndex; }\nprivate _selectedIndex: number | null = null;\n/**\n * Position of the tab header.\n */\nheaderPosition: MdTabHeaderPosition = 'above';\n/**\n * Background color of the tab group.\n * @return {?}\n */\nget backgroundColor(): ThemePalette { return this._backgroundColor; }\n/**\n * @param {?} value\n * @return {?}\n */\nset backgroundColor(value: ThemePalette) {\n    let /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n\n    this._renderer.removeClass(nativeElement, `mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      this._renderer.addClass(nativeElement, `mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\nprivate _backgroundColor: ThemePalette;\n/**\n * Output to enable support for two-way binding on `[(selectedIndex)]`\n */\nselectedIndexChange: EventEmitter<number> = new EventEmitter();\n/**\n * Event emitted when focus has changed within a tab group.\n */\nfocusChange: EventEmitter<MdTabChangeEvent> = new EventEmitter<MdTabChangeEvent>();\n/**\n * Event emitted when the tab selection has changed.\n */\nselectChange: EventEmitter<MdTabChangeEvent> = new EventEmitter<MdTabChangeEvent>(true);\nprivate _groupId: number;\n/**\n * @param {?} _renderer\n * @param {?} elementRef\n * @param {?} _changeDetectorRef\n */\nconstructor(_renderer: Renderer2,\n              elementRef: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    super(_renderer, elementRef);\n    this._groupId = nextId++;\n  }\n/**\n * After the content is checked, this component knows what tabs have been defined\n * and what the selected index should be. This is where we can know exactly what position\n * each tab should be in according to the new selected index, and additionally we know how\n * a new selected tab should transition in (from the left or right).\n * @return {?}\n */\nngAfterContentChecked(): void {\n    // Clamp the next selected index to the boundsof 0 and the tabs length.\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    let /** @type {?} */ indexToSelect = this._indexToSelect =\n        Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect && this._selectedIndex != null) {\n      this.selectChange.emit(this._createChangeEvent(indexToSelect));\n      // Emitting this value after change detection has run\n      // since the checked content may contain this variable'\n      Promise.resolve().then(() => this.selectedIndexChange.emit(indexToSelect));\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MdTab, index: number) => {\n      tab.position = index - indexToSelect;\n      tab.isActive = index === indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n/**\n * Waits one frame for the view to update, then updates the ink bar\n * Note: This must be run outside of the zone or it will create an infinite change detection loop.\n * @return {?}\n */\nngAfterViewChecked(): void {\n    this._isInitialized = true;\n  }\n/**\n * @param {?} index\n * @return {?}\n */\n_focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate _createChangeEvent(index: number): MdTabChangeEvent {\n    const /** @type {?} */ event = new MdTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n/**\n * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n * on the MdTab component, whereas the data binding is inside the MdTabGroup. In order for the\n * binding to be updated, we need to subscribe to changes in it and trigger change detection\n * manually.\n * @return {?}\n */\nprivate _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(\n        ...this._tabs.map(tab => tab._disableChange),\n        ...this._tabs.map(tab => tab._labelChange)).subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * Returns a unique id for each tab label element\n * @param {?} i\n * @return {?}\n */\n_getTabLabelId(i: number): string {\n    return `md-tab-label-${this._groupId}-${i}`;\n  }\n/**\n * Returns a unique id for each tab content element\n * @param {?} i\n * @return {?}\n */\n_getTabContentId(i: number): string {\n    return `md-tab-content-${this._groupId}-${i}`;\n  }\n/**\n * Sets the height of the body wrapper to the height of the activating tab if dynamic\n * height property is true.\n * @param {?} tabHeight\n * @return {?}\n */\n_setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height',\n        this._tabBodyWrapperHeight + 'px');\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height',\n          tabHeight + 'px');\n    }\n  }\n/**\n * Removes the height of the tab body wrapper.\n * @return {?}\n */\n_removeTabBodyWrapperHeight(): void {\n    this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n    this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height', '');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab-group, mat-tab-group',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n  viewProviders: [{provide: MATERIAL_COMPATIBILITY_MODE, useValue: true}],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_tabs': [{ type: ContentChildren, args: [MdTab, ] },],\n'_tabBodyWrapper': [{ type: ViewChild, args: ['tabBodyWrapper', ] },],\n'dynamicHeight': [{ type: Input },],\n'_dynamicHeightDeprecated': [{ type: Input, args: ['md-dynamic-height', ] },],\n'selectedIndex': [{ type: Input },],\n'headerPosition': [{ type: Input },],\n'backgroundColor': [{ type: Input },],\n'selectedIndexChange': [{ type: Output },],\n'focusChange': [{ type: Output },],\n'selectChange': [{ type: Output },],\n};\n}\n\nfunction MdTabGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabGroup.ctorParameters;\n/** @type {?} */\nMdTabGroup.propDecorators;\n/** @type {?} */\nMdTabGroup.prototype._tabs;\n/** @type {?} */\nMdTabGroup.prototype._tabBodyWrapper;\n/**\n * Whether this component has been initialized.\n * @type {?}\n */\nMdTabGroup.prototype._isInitialized;\n/**\n * The tab index that should be selected after the content has been checked.\n * @type {?}\n */\nMdTabGroup.prototype._indexToSelect;\n/**\n * Snapshot of the height of the tab body wrapper before another tab is activated.\n * @type {?}\n */\nMdTabGroup.prototype._tabBodyWrapperHeight;\n/**\n * Subscription to tabs being added/removed.\n * @type {?}\n */\nMdTabGroup.prototype._tabsSubscription;\n/**\n * Subscription to changes in the tab labels.\n * @type {?}\n */\nMdTabGroup.prototype._tabLabelSubscription;\n/** @type {?} */\nMdTabGroup.prototype._dynamicHeight;\n/** @type {?} */\nMdTabGroup.prototype._selectedIndex;\n/**\n * Position of the tab header.\n * @type {?}\n */\nMdTabGroup.prototype.headerPosition;\n/** @type {?} */\nMdTabGroup.prototype._backgroundColor;\n/**\n * Output to enable support for two-way binding on `[(selectedIndex)]`\n * @type {?}\n */\nMdTabGroup.prototype.selectedIndexChange;\n/**\n * Event emitted when focus has changed within a tab group.\n * @type {?}\n */\nMdTabGroup.prototype.focusChange;\n/**\n * Event emitted when the tab selection has changed.\n * @type {?}\n */\nMdTabGroup.prototype.selectChange;\n/** @type {?} */\nMdTabGroup.prototype._groupId;\n/** @type {?} */\nMdTabGroup.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ViewChild,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ElementRef,\n  Optional,\n  AfterViewChecked,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationEvent,\n} from '@angular/animations';\nimport {TemplatePortal, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MdTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MdTabBodyOriginState = 'left' | 'right';\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nexport class MdTabBody implements OnInit, AfterViewChecked {\n/**\n * The portal host inside of this container into which the tab body content will be loaded.\n */\n_portalHost: PortalHostDirective;\n/**\n * Event emitted when the tab begins to animate towards the center as the active tab.\n */\nonCentering: EventEmitter<number> = new EventEmitter<number>();\n/**\n * Event emitted when the tab completes its animation towards the center.\n */\nonCentered: EventEmitter<void> = new EventEmitter<void>(true);\n/**\n * The tab body content to display.\n */\n_content: TemplatePortal<any>;\n/**\n * The shifted index position of the tab body, where zero represents the active center tab.\n */\n_position: MdTabBodyPositionState;\n/**\n * @param {?} position\n * @return {?}\n */\nset position(position: number) {\n    if (position < 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\n    } else if (position > 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n/**\n * The origin position from which this tab should appear when it is centered into view.\n */\n_origin: MdTabBodyOriginState;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @param {?} origin\n * @return {?}\n */\nset origin(origin: number) {\n    if (origin == null) { return; }\n\n    const /** @type {?} */ dir = this._getLayoutDirection();\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      this._origin = 'left';\n    } else {\n      this._origin = 'right';\n    }\n  }\n/**\n * @param {?} _elementRef\n * @param {?} _dir\n */\nconstructor(private _elementRef: ElementRef,\nprivate _dir: Directionality) { }\n/**\n * After initialized, check if the content is centered and has an origin. If so, set the\n * special position states that transition the tab from the left or right before centering.\n * @return {?}\n */\nngOnInit() {\n    if (this._position == 'center' && this._origin) {\n      this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\n    }\n  }\n/**\n * After the view has been set, check if the tab content is set to the center and attach the\n * content if it is not already attached.\n * @return {?}\n */\nngAfterViewChecked() {\n    if (this._isCenterPosition(this._position) && !this._portalHost.hasAttached()) {\n      this._portalHost.attach(this._content);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabStarted(e: AnimationEvent) {\n    if (this._isCenterPosition(e.toState)) {\n      this.onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabComplete(e: AnimationEvent) {\n    // If the end state is that the tab is not centered, then detach the content.\n    if (!this._isCenterPosition(e.toState) && !this._isCenterPosition(this._position)) {\n      this._portalHost.detach();\n    }\n\n    // If the transition to the center is complete, emit an event.\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n      this.onCentered.emit();\n    }\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\n_getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n/**\n * Whether the provided position state is considered center, regardless of origin.\n * @param {?} position\n * @return {?}\n */\nprivate _isCenterPosition(position: MdTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab-body, mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-body',\n  },\n  animations: [\n    trigger('translateTab', [\n      state('void', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('left', style({transform: 'translate3d(-100%, 0, 0)'})),\n      state('left-origin-center', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('right-origin-center', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('center', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('right', style({transform: 'translate3d(100%, 0, 0)'})),\n      transition('* => left, * => right, left => center, right => center',\n          animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n      transition('void => left-origin-center', [\n        style({transform: 'translate3d(-100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ]),\n      transition('void => right-origin-center', [\n        style({transform: 'translate3d(100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ])\n    ])\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_portalHost': [{ type: ViewChild, args: [PortalHostDirective, ] },],\n'onCentering': [{ type: Output },],\n'onCentered': [{ type: Output },],\n'_content': [{ type: Input, args: ['content', ] },],\n'position': [{ type: Input, args: ['position', ] },],\n'origin': [{ type: Input, args: ['origin', ] },],\n};\n}\n\nfunction MdTabBody_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabBody.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabBody.ctorParameters;\n/** @type {?} */\nMdTabBody.propDecorators;\n/**\n * The portal host inside of this container into which the tab body content will be loaded.\n * @type {?}\n */\nMdTabBody.prototype._portalHost;\n/**\n * Event emitted when the tab begins to animate towards the center as the active tab.\n * @type {?}\n */\nMdTabBody.prototype.onCentering;\n/**\n * Event emitted when the tab completes its animation towards the center.\n * @type {?}\n */\nMdTabBody.prototype.onCentered;\n/**\n * The tab body content to display.\n * @type {?}\n */\nMdTabBody.prototype._content;\n/**\n * The shifted index position of the tab body, where zero represents the active center tab.\n * @type {?}\n */\nMdTabBody.prototype._position;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @type {?}\n */\nMdTabBody.prototype._origin;\n/** @type {?} */\nMdTabBody.prototype._elementRef;\n/** @type {?} */\nMdTabBody.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {TemplatePortal} from '@angular/material/core';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\nimport {MdTabLabel} from './tab-label';\nimport {Subject} from 'rxjs/Subject';\n/**\n * \\@docs-private\n */\nexport class MdTabBase {}\nexport const /** @type {?} */ _MdTabMixinBase = mixinDisabled(MdTabBase);\nexport class MdTab extends _MdTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n/**\n * Content for the tab label given by <ng-template md-tab-label>.\n */\ntemplateLabel: MdTabLabel;\n/**\n * Template inside the MdTab view that contains an <ng-content>.\n */\n_content: TemplateRef<any>;\n/**\n * The plain text label for the tab, used when there is no template label.\n */\ntextLabel: string = '';\n/**\n * The portal that will be the hosted content of the tab\n */\nprivate _contentPortal: TemplatePortal<any> | null = null;\n/**\n * @return {?}\n */\nget content(): TemplatePortal<any> | null { return this._contentPortal; }\n/**\n * Emits whenever the label changes.\n */\n_labelChange = new Subject<void>();\n/**\n * Emits whenevfer the disable changes\n */\n_disableChange = new Subject<void>();\n/**\n * The relatively indexed position where 0 represents the center, negative is left, and positive\n * represents the right.\n */\nposition: number | null = null;\n/**\n * The initial relatively index origin of the tab if it was created and selected after there\n * was already a selected tab. Provides context of what position the tab should originate from.\n */\norigin: number | null = null;\n/**\n * Whether the tab is currently active.\n */\nisActive = false;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel')) {\n      this._labelChange.next();\n    }\n\n    if (changes.hasOwnProperty('disabled')) {\n      this._disableChange.next();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._disableChange.complete();\n    this._labelChange.complete();\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab, mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  exportAs: 'mdTab, matTab',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'templateLabel': [{ type: ContentChild, args: [MdTabLabel, ] },],\n'_content': [{ type: ViewChild, args: [TemplateRef, ] },],\n'textLabel': [{ type: Input, args: ['label', ] },],\n};\n}\n\nfunction MdTab_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTab.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTab.ctorParameters;\n/** @type {?} */\nMdTab.propDecorators;\n/**\n * Content for the tab label given by <ng-template md-tab-label>.\n * @type {?}\n */\nMdTab.prototype.templateLabel;\n/**\n * Template inside the MdTab view that contains an <ng-content>.\n * @type {?}\n */\nMdTab.prototype._content;\n/**\n * The plain text label for the tab, used when there is no template label.\n * @type {?}\n */\nMdTab.prototype.textLabel;\n/**\n * The portal that will be the hosted content of the tab\n * @type {?}\n */\nMdTab.prototype._contentPortal;\n/**\n * Emits whenever the label changes.\n * @type {?}\n */\nMdTab.prototype._labelChange;\n/**\n * Emits whenevfer the disable changes\n * @type {?}\n */\nMdTab.prototype._disableChange;\n/**\n * The relatively indexed position where 0 represents the center, negative is left, and positive\n * represents the right.\n * @type {?}\n */\nMdTab.prototype.position;\n/**\n * The initial relatively index origin of the tab if it was created and selected after there\n * was already a selected tab. Provides context of what position the tab should originate from.\n * @type {?}\n */\nMdTab.prototype.origin;\n/**\n * Whether the tab is currently active.\n * @type {?}\n */\nMdTab.prototype.isActive;\n/** @type {?} */\nMdTab.prototype._viewContainerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {TemplatePortalDirective} from '@angular/cdk/portal';\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _MdTabLabelBaseClass = TemplatePortalDirective;\n/**\n * Used to flag tab labels for use with the portal directive\n */\nexport class MdTabLabel extends _MdTabLabelBaseClass {\n/**\n * @param {?} templateRef\n * @param {?} viewContainerRef\n */\nconstructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tab-label], [mat-tab-label], [mdTabLabel], [matTabLabel]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\n}\n\nfunction MdTabLabel_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLabel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLabel.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Renderer2, ElementRef, NgZone} from '@angular/core';\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nexport class MdInkBar {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _ngZone\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _ngZone: NgZone) {}\n/**\n * Calculates the styles from the provided element in order to align the ink-bar to that element.\n * Shows the ink bar if previously set as hidden.\n * @param {?} element\n * @return {?}\n */\nalignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n/**\n * Shows the ink bar.\n * @return {?}\n */\nshow(): void {\n    this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'visible');\n  }\n/**\n * Hides the ink bar.\n * @return {?}\n */\nhide(): void {\n    this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'hidden');\n  }\n/**\n * Sets the proper styles to the ink bar element.\n * @param {?} element\n * @return {?}\n */\nprivate _setStyles(element: HTMLElement) {\n    const /** @type {?} */ left = element ? (element.offsetLeft || 0) + 'px' : '0';\n    const /** @type {?} */ width = element ? (element.offsetWidth || 0) + 'px' : '0';\n\n    this._renderer.setStyle(this._elementRef.nativeElement, 'left', left);\n    this._renderer.setStyle(this._elementRef.nativeElement, 'width', width);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-ink-bar, mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: NgZone, },\n];\n}\n\nfunction MdInkBar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdInkBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdInkBar.ctorParameters;\n/** @type {?} */\nMdInkBar.prototype._renderer;\n/** @type {?} */\nMdInkBar.prototype._elementRef;\n/** @type {?} */\nMdInkBar.prototype._ngZone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["observableOf"],"mappings":"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"}