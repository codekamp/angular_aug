{"version":3,"file":"tooltip.es5.js","sources":["../../../src/lib/tooltip/index.ts","../../../src/lib/tooltip/tooltip-module.ts","../../../src/lib/tooltip/tooltip.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {MdTooltipModule,TooltipPosition,TOUCHEND_HIDE_DELAY,SCROLL_THROTTLE_MS,TOOLTIP_PANEL_CLASS,getMdTooltipInvalidPositionError,MD_TOOLTIP_SCROLL_STRATEGY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER,MdTooltip,TooltipVisibility,TooltipComponent,MatTooltip,MatTooltipModule,MAT_TOOLTIP_SCROLL_STRATEGY,MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER,MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY} from './public_api';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {A11yModule, ARIA_DESCRIBER_PROVIDER} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MdCommonModule} from '@angular/material/core';\nimport {MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER, MdTooltip, TooltipComponent} from './tooltip';\nexport class MdTooltipModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MdCommonModule,\n    PlatformModule,\n    A11yModule,\n  ],\n  exports: [MdTooltip, TooltipComponent, MdCommonModule],\n  declarations: [MdTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER, ARIA_DESCRIBER_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdTooltipModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTooltipModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTooltipModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\nimport {AriaDescriber} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  OverlayConfig,\n  RepositionScrollStrategy,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {Platform} from '@angular/cdk/platform';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {first} from '@angular/cdk/rxjs';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n/**\n * Time in ms to delay before changing the tooltip visibility to hidden\n */\nexport const TOUCHEND_HIDE_DELAY = 1500;\n/**\n * Time in ms to throttle repositioning after scroll events.\n */\nexport const SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @param {?} position\n * @return {?}\n */\nexport function getMdTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n */\nexport const MD_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/**\n * \\@docs-private\n */\nexport const MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n * \n * https://material.google.com/components/tooltips.html\n */\nexport class MdTooltip implements OnDestroy {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: TooltipComponent | null;\nprivate _position: TooltipPosition = 'below';\nprivate _disabled: boolean = false;\nprivate _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n/**\n * Allows the user to define the position of the tooltip relative to the parent element\n * @return {?}\n */\nget position(): TooltipPosition { return this._position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n      // the tooltip.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    }\n  }\n/**\n * Disables the display of the tooltip.\n * @return {?}\n */\nget disabled(): boolean { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _positionDeprecated(): TooltipPosition { return this._position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _positionDeprecated(value: TooltipPosition) { this._position = value; }\n/**\n * The default delay in ms before showing the tooltip after show is called\n */\nshowDelay = 0;\n/**\n * The default delay in ms before hiding the tooltip after hide is called\n */\nhideDelay = 0;\nprivate _message = '';\n/**\n * The message to be displayed in the tooltip\n * @return {?}\n */\nget message() { return this._message; }\n/**\n * @param {?} value\n * @return {?}\n */\nset message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    this._message = value != null ? `${value}`.trim() : '';\n    this._updateTooltipMessage();\n    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n  }\n/**\n * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n * @return {?}\n */\nget tooltipClass() { return this._tooltipClass; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMessage(): string { return this.message; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMessage(v: string) { this.message = v; }\n/**\n * @return {?}\n */\nget _matMessage() { return this.message; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matMessage(v) { this.message = v; }\n/**\n * @return {?}\n */\nget _matPosition() { return this.position; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matPosition(v) { this.position = v; }\n/**\n * @return {?}\n */\nget _matDisabled() { return this.disabled; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matDisabled(v) { this.disabled = v; }\n/**\n * @return {?}\n */\nget _matHideDelay() { return this.hideDelay; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matHideDelay(v) { this.hideDelay = v; }\n/**\n * @return {?}\n */\nget _matShowDelay() { return this.showDelay; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matShowDelay(v) { this.showDelay = v; }\n/**\n * @return {?}\n */\nget _matClass() { return this.tooltipClass; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matClass(v) { this.tooltipClass = v; }\nprivate _enterListener: Function;\nprivate _leaveListener: Function;\n/**\n * @param {?} renderer\n * @param {?} _overlay\n * @param {?} _elementRef\n * @param {?} _scrollDispatcher\n * @param {?} _viewContainerRef\n * @param {?} _ngZone\n * @param {?} _platform\n * @param {?} _ariaDescriber\n * @param {?} _scrollStrategy\n * @param {?} _dir\n */\nconstructor(\n    renderer: Renderer2,\nprivate _overlay: Overlay,\nprivate _elementRef: ElementRef,\nprivate _scrollDispatcher: ScrollDispatcher,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _ngZone: NgZone,\nprivate _platform: Platform,\nprivate _ariaDescriber: AriaDescriber,\nprivate _scrollStrategy,\nprivate _dir: Directionality) {\n\n    // The mouse events shouldn't be bound on iOS devices, because\n    // they can prevent the first tap from firing its click event.\n    if (!_platform.IOS) {\n      this._enterListener =\n        renderer.listen(_elementRef.nativeElement, 'mouseenter', () => this.show());\n      this._leaveListener =\n        renderer.listen(_elementRef.nativeElement, 'mouseleave', () => this.hide());\n    }\n  }\n/**\n * Dispose the tooltip when destroyed.\n * @return {?}\n */\nngOnDestroy() {\n    if (this._tooltipInstance) {\n      this._disposeTooltip();\n    }\n    // Clean up the event listeners set in the constructor\n    if (!this._platform.IOS) {\n      this._enterListener();\n      this._leaveListener();\n    }\n\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n  }\n/**\n * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n * @param {?=} delay\n * @return {?}\n */\nshow(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message) { return; }\n\n    if (!this._tooltipInstance) {\n      this._createTooltip();\n    }\n\n    this._setTooltipClass(this._tooltipClass);\n    this._updateTooltipMessage(); /** @type {?} */((\n    this._tooltipInstance)).show(this._position, delay);\n  }\n/**\n * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n * @param {?=} delay\n * @return {?}\n */\nhide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n/**\n * Shows/hides the tooltip\n * @return {?}\n */\ntoggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n/**\n * Returns true if the tooltip is currently visible to the user\n * @return {?}\n */\n_isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n/**\n * Handles the keydown events on the host element.\n * @param {?} e\n * @return {?}\n */\n_handleKeydown(e: KeyboardEvent) {\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n      e.stopPropagation();\n      this.hide(0);\n    }\n  }\n/**\n * Create the tooltip to display\n * @return {?}\n */\nprivate _createTooltip(): void {\n    let /** @type {?} */ overlayRef = this._createOverlay();\n    let /** @type {?} */ portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n\n    this._tooltipInstance = overlayRef.attach(portal).instance; /** @type {?} */((\n\n    // Dispose the overlay when finished the shown tooltip.\n    this._tooltipInstance)).afterHidden().subscribe(() => {\n      // Check first if the tooltip has already been removed through this components destroy.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    });\n  }\n/**\n * Create the overlay config and position strategy\n * @return {?}\n */\nprivate _createOverlay(): OverlayRef {\n    const /** @type {?} */ origin = this._getOrigin();\n    const /** @type {?} */ position = this._getOverlayPosition();\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    // After position changes occur and the overlay is clipped by a parent scrollable then\n    // close the tooltip.\n    const /** @type {?} */ strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n    strategy.withScrollableContainers(this._scrollDispatcher.getScrollContainers(this._elementRef));\n    strategy.onPositionChange.subscribe(change => {\n      if (change.scrollableViewProperties.isOverlayClipped &&\n          this._tooltipInstance && this._tooltipInstance.isVisible()) {\n        this.hide(0);\n      }\n    });\n\n    const /** @type {?} */ config = new OverlayConfig({\n      direction: this._dir ? this._dir.value : 'ltr',\n      positionStrategy: strategy,\n      panelClass: TOOLTIP_PANEL_CLASS,\n      scrollStrategy: this._scrollStrategy()\n    });\n\n    this._overlayRef = this._overlay.create(config);\n\n    return this._overlayRef;\n  }\n/**\n * Disposes the current tooltip and the overlay it is attached to\n * @return {?}\n */\nprivate _disposeTooltip(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._tooltipInstance = null;\n  }\n/**\n * Returns the origin position based on the user's position preference\n * @return {?}\n */\n_getOrigin(): OriginConnectionPosition {\n    if (this.position == 'above' || this.position == 'below') {\n      return {originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom'};\n    }\n\n    const /** @type {?} */ isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n        this.position == 'before' && isDirectionLtr ||\n        this.position == 'after' && !isDirectionLtr) {\n      return {originX: 'start', originY: 'center'};\n    }\n\n    if (this.position == 'right' ||\n        this.position == 'after' && isDirectionLtr ||\n        this.position == 'before' && !isDirectionLtr) {\n      return {originX: 'end', originY: 'center'};\n    }\n\n    throw getMdTooltipInvalidPositionError(this.position);\n  }\n/**\n * Returns the overlay position based on the user's preference\n * @return {?}\n */\n_getOverlayPosition(): OverlayConnectionPosition {\n    if (this.position == 'above') {\n      return {overlayX: 'center', overlayY: 'bottom'};\n    }\n\n    if (this.position == 'below') {\n      return {overlayX: 'center', overlayY: 'top'};\n    }\n\n    const /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n        this.position == 'before' && isLtr ||\n        this.position == 'after' && !isLtr) {\n      return {overlayX: 'end', overlayY: 'center'};\n    }\n\n    if (this.position == 'right' ||\n        this.position == 'after' && isLtr ||\n        this.position == 'before' && !isLtr) {\n      return {overlayX: 'start', overlayY: 'center'};\n    }\n\n    throw getMdTooltipInvalidPositionError(this.position);\n  }\n/**\n * Updates the tooltip message and repositions the overlay according to the new message length\n * @return {?}\n */\nprivate _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance._markForCheck();\n\n      first.call(this._ngZone.onMicrotaskEmpty.asObservable()).subscribe(() => {\n        if (this._tooltipInstance) { /** @type {?} */((\n          this._overlayRef)).updatePosition();\n        }\n      });\n    }\n  }\n/**\n * Updates the tooltip class\n * @param {?} tooltipClass\n * @return {?}\n */\nprivate _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tooltip], [mdTooltip], [mat-tooltip], [matTooltip]',\n  host: {\n    '(longpress)': 'show()',\n    '(focus)': 'show()',\n    '(blur)': 'hide(0)',\n    '(keydown)': '_handleKeydown($event)',\n    '(touchend)': 'hide(' + TOUCHEND_HIDE_DELAY + ')',\n  },\n  exportAs: 'mdTooltip, matTooltip',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: Overlay, },\n{type: ElementRef, },\n{type: ScrollDispatcher, },\n{type: ViewContainerRef, },\n{type: NgZone, },\n{type: Platform, },\n{type: AriaDescriber, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_TOOLTIP_SCROLL_STRATEGY, ] }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: Input, args: ['mdTooltipPosition', ] },],\n'disabled': [{ type: Input, args: ['mdTooltipDisabled', ] },],\n'_positionDeprecated': [{ type: Input, args: ['tooltip-position', ] },],\n'showDelay': [{ type: Input, args: ['mdTooltipShowDelay', ] },],\n'hideDelay': [{ type: Input, args: ['mdTooltipHideDelay', ] },],\n'message': [{ type: Input, args: ['mdTooltip', ] },],\n'tooltipClass': [{ type: Input, args: ['mdTooltipClass', ] },],\n'_deprecatedMessage': [{ type: Input, args: ['md-tooltip', ] },],\n'_matMessage': [{ type: Input, args: ['matTooltip', ] },],\n'_matPosition': [{ type: Input, args: ['matTooltipPosition', ] },],\n'_matDisabled': [{ type: Input, args: ['matTooltipDisabled', ] },],\n'_matHideDelay': [{ type: Input, args: ['matTooltipHideDelay', ] },],\n'_matShowDelay': [{ type: Input, args: ['matTooltipShowDelay', ] },],\n'_matClass': [{ type: Input, args: ['matTooltipClass', ] },],\n};\n}\n\nfunction MdTooltip_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTooltip.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTooltip.ctorParameters;\n/** @type {?} */\nMdTooltip.propDecorators;\n/** @type {?} */\nMdTooltip.prototype._overlayRef;\n/** @type {?} */\nMdTooltip.prototype._tooltipInstance;\n/** @type {?} */\nMdTooltip.prototype._position;\n/** @type {?} */\nMdTooltip.prototype._disabled;\n/** @type {?} */\nMdTooltip.prototype._tooltipClass;\n/**\n * The default delay in ms before showing the tooltip after show is called\n * @type {?}\n */\nMdTooltip.prototype.showDelay;\n/**\n * The default delay in ms before hiding the tooltip after hide is called\n * @type {?}\n */\nMdTooltip.prototype.hideDelay;\n/** @type {?} */\nMdTooltip.prototype._message;\n/** @type {?} */\nMdTooltip.prototype._enterListener;\n/** @type {?} */\nMdTooltip.prototype._leaveListener;\n/** @type {?} */\nMdTooltip.prototype._overlay;\n/** @type {?} */\nMdTooltip.prototype._elementRef;\n/** @type {?} */\nMdTooltip.prototype._scrollDispatcher;\n/** @type {?} */\nMdTooltip.prototype._viewContainerRef;\n/** @type {?} */\nMdTooltip.prototype._ngZone;\n/** @type {?} */\nMdTooltip.prototype._platform;\n/** @type {?} */\nMdTooltip.prototype._ariaDescriber;\n/** @type {?} */\nMdTooltip.prototype._scrollStrategy;\n/** @type {?} */\nMdTooltip.prototype._dir;\n}\n\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nexport class TooltipComponent {\n/**\n * Message to display in the tooltip\n */\nmessage: string;\n/**\n * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n */\ntooltipClass: string|string[]|Set<string>|{[key: string]: any};\n/**\n * The timeout ID of any current timer set to show the tooltip\n */\n_showTimeoutId: number;\n/**\n * The timeout ID of any current timer set to hide the tooltip\n */\n_hideTimeoutId: number;\n/**\n * Property watched by the animation framework to show or hide the tooltip\n */\n_visibility: TooltipVisibility = 'initial';\n/**\n * Whether interactions on the page should close the tooltip\n */\nprivate _closeOnInteraction: boolean = false;\n/**\n * The transform origin used in the animation for showing and hiding the tooltip\n */\n_transformOrigin: string = 'bottom';\n/**\n * Subject for notifying that the tooltip has been hidden from the view\n */\nprivate _onHide: Subject<any> = new Subject();\n/**\n * @param {?} _dir\n * @param {?} _changeDetectorRef\n */\nconstructor(\nprivate _dir: Directionality,\nprivate _changeDetectorRef: ChangeDetectorRef) {}\n/**\n * Shows the tooltip with an animation originating from the provided origin\n * @param {?} position Position of the tooltip.\n * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n * @return {?}\n */\nshow(position: TooltipPosition, delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    this._setTransformOrigin(position);\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n/**\n * Begins the animation to hide the tooltip after the provided delay in ms.\n * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n * @return {?}\n */\nhide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n/**\n * Returns an observable that notifies when the tooltip has been hidden from view\n * @return {?}\n */\nafterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n/**\n * Whether the tooltip is being displayed\n * @return {?}\n */\nisVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n/**\n * Sets the tooltip transform origin according to the tooltip position\n * @param {?} value\n * @return {?}\n */\n_setTransformOrigin(value: TooltipPosition) {\n    const /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n    switch (value) {\n      case 'before': this._transformOrigin = isLtr ? 'right' : 'left'; break;\n      case 'after':  this._transformOrigin = isLtr ? 'left' : 'right'; break;\n      case 'left':   this._transformOrigin = 'right'; break;\n      case 'right':  this._transformOrigin = 'left'; break;\n      case 'above':  this._transformOrigin = 'bottom'; break;\n      case 'below':  this._transformOrigin = 'top'; break;\n      default: throw getMdTooltipInvalidPositionError(value);\n    }\n  }\n/**\n * @return {?}\n */\n_animationStart() {\n    this._closeOnInteraction = false;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_animationDone(event: AnimationEvent): void {\n    const /** @type {?} */ toState = /** @type {?} */(( event.toState as TooltipVisibility));\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      // Note: as of Angular 4.3, the animations module seems to fire the `start` callback before\n      // the end if animations are disabled. Make this call async to ensure that it still fires\n      // at the appropriate time.\n      Promise.resolve().then(() => this._closeOnInteraction = true);\n    }\n  }\n/**\n * Interactions on the HTML body should close the tooltip immediately as defined in the\n * material design spec.\n * https://material.google.com/components/tooltips.html#tooltips-interaction\n * @return {?}\n */\n_handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n/**\n * Marks that the tooltip needs to be checked in the next change detection run.\n * Mainly used for rendering the initial text before positioning a tooltip, which\n * can be problematic in components with OnPush change detection.\n * @return {?}\n */\n_markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tooltip-component, mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('state', [\n      state('initial, void, hidden', style({transform: 'scale(0)'})),\n      state('visible', style({transform: 'scale(1)'})),\n      transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n      transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n    ])\n  ],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction TooltipComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipComponent.ctorParameters;\n/**\n * Message to display in the tooltip\n * @type {?}\n */\nTooltipComponent.prototype.message;\n/**\n * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n * @type {?}\n */\nTooltipComponent.prototype.tooltipClass;\n/**\n * The timeout ID of any current timer set to show the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._showTimeoutId;\n/**\n * The timeout ID of any current timer set to hide the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._hideTimeoutId;\n/**\n * Property watched by the animation framework to show or hide the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._visibility;\n/**\n * Whether interactions on the page should close the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._closeOnInteraction;\n/**\n * The transform origin used in the animation for showing and hiding the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._transformOrigin;\n/**\n * Subject for notifying that the tooltip has been hidden from the view\n * @type {?}\n */\nTooltipComponent.prototype._onHide;\n/** @type {?} */\nTooltipComponent.prototype._dir;\n/** @type {?} */\nTooltipComponent.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}