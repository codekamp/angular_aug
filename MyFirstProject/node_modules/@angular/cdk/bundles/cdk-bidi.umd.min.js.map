{"version":3,"file":"cdk-bidi.umd.min.js","sources":["../../src/cdk/bidi/directionality.ts","../../src/cdk/bidi/dir.ts","../../src/cdk/bidi/public_api.ts","../../src/cdk/bidi/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  EventEmitter,\n  Injectable,\n  Optional,\n  SkipSelf,\n  Inject,\n  InjectionToken,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\n\n\nexport type Direction = 'ltr' | 'rtl';\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n * \n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n * \n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n */\nexport const DIR_DOCUMENT = new InjectionToken<Document>('md-dir-doc');\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nexport class Directionality {\n  readonly value: Direction = 'ltr';\n  readonly change = new EventEmitter<void>();\n/**\n * @param {?=} _document\n */\nconstructor(  _document?: any) {\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.value = (bodyDir || htmlDir || 'ltr') as Direction;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT, ] }, ]},\n];\n}\n\nfunction Directionality_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectionality.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDirectionality.ctorParameters;\n/** @type {?} */\nDirectionality.prototype.value;\n/** @type {?} */\nDirectionality.prototype.change;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentDirectionality\n * @param {?} _document\n * @return {?}\n */\nexport function DIRECTIONALITY_PROVIDER_FACTORY(parentDirectionality, _document) {\n  return parentDirectionality || new Directionality(_document);\n}\n/**\n * \\@docs-private\n */\nexport const DIRECTIONALITY_PROVIDER = {\n  // If there is already a Directionality available, use that. Otherwise, provide a new one.\n  provide: Directionality,\n  deps: [[new Optional(), new SkipSelf(), Directionality], [new Optional(), DOCUMENT]],\n  useFactory: DIRECTIONALITY_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  Output,\n  Input,\n  EventEmitter\n} from '@angular/core';\n\nimport {Direction, Directionality} from './directionality';\n/**\n * Directive to listen for changes of direction of part of the DOM.\n * \n * Would provide itself in case a component looks for the Directionality service\n */\nexport class Dir implements Directionality {\n/**\n * Layout direction of the element.\n */\n_dir: Direction = 'ltr';\n/**\n * Whether the `value` has been set to its initial value.\n */\nprivate _isInitialized: boolean = false;\n/**\n * Event emitted when the direction changes.\n */\nchange = new EventEmitter<void>();\n/**\n * \\@docs-private\n * @return {?}\n */\nget dir(): Direction {\n    return this._dir;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset dir(v: Direction) {\n    let /** @type {?} */ old = this._dir;\n    this._dir = v;\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit();\n    }\n  }\n/**\n * Current layout direction of the element.\n * @return {?}\n */\nget value(): Direction { return this.dir; }\n/**\n * Initialize once default value has been set.\n * @return {?}\n */\nngAfterContentInit() {\n    this._isInitialized = true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dir]',\n  providers: [{provide: Directionality, useExisting: Dir}],\n  host: {'[dir]': 'dir'},\n  exportAs: 'dir',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'change': [{ type: Output, args: ['dirChange', ] },],\n'dir': [{ type: Input, args: ['dir', ] },],\n};\n}\n\nfunction Dir_tsickle_Closure_declarations() {\n/** @type {?} */\nDir.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDir.ctorParameters;\n/** @type {?} */\nDir.propDecorators;\n/**\n * Layout direction of the element.\n * @type {?}\n */\nDir.prototype._dir;\n/**\n * Whether the `value` has been set to its initial value.\n * @type {?}\n */\nDir.prototype._isInitialized;\n/**\n * Event emitted when the direction changes.\n * @type {?}\n */\nDir.prototype.change;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {Dir} from './dir';\nimport {DIR_DOCUMENT, Directionality} from './directionality';\n\nexport {\n  Directionality,\n  DIRECTIONALITY_PROVIDER_FACTORY,\n  DIRECTIONALITY_PROVIDER,\n  DIR_DOCUMENT,\n  Direction,\n} from './directionality';\nexport {Dir} from './dir';\nexport class BidiModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [Dir],\n  declarations: [Dir],\n  providers: [\n    {provide: DIR_DOCUMENT, useExisting: DOCUMENT},\n    Directionality,\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BidiModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBidiModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBidiModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Directionality,DIRECTIONALITY_PROVIDER_FACTORY,DIRECTIONALITY_PROVIDER,DIR_DOCUMENT,Direction,Dir,BidiModule} from './public_api';\n"],"names":["DIRECTIONALITY_PROVIDER_FACTORY","parentDirectionality","_document","Directionality","this","value","change","EventEmitter","htmlDir","documentElement","dir","bodyDir","decorators","type","Injectable","ctorParameters","undefined","Optional","Inject","args","DIR_DOCUMENT","DIRECTIONALITY_PROVIDER","provide","deps","SkipSelf","DOCUMENT","useFactory","Dir","Object","defineProperty","prototype","get","_dir","set","v","old","_isInitialized","emit","enumerable","configurable","ngAfterContentInit","providers","useExisting","host","[dir]","exportAs","propDecorators","Output","Input","BidiModule","declarations"],"mappings":";;;;;;;+XAoFA,SAAAA,GArBCC,EAAAC,GAsBC,MA5BOD,IAAwB,GAAIE,GAAeD,uEAjBzC,GAEXE,KAAAC,MAAA,MAHWD,KAAXE,OAAA,GAA8BC,GAA9BA,aACAL,EAAA,8BAQAM,EAAAN,EAAAO,gBAAgDP,EAAhDO,gBAAAC,IAAA,IACMN,MAANC,MAAAM,GAA+BH,GAA/B,OAGA,MAAAL,KACOA,GAAPS,aACEC,KAAMC,EAARA,aAGCX,EAADY,eAAC,WAAD,QAGCF,SAPCG,GAAAJ,aAAAC,KAAAI,EAOFA,WAPEJ,KAAAK,EAOFA,OAPEC,MAAAC,OAqCF,IAAAC,IAEEC,QAASnB,EACToB,OAAQ,GAAIN,GAAdA,SAA0B,GAAIO,GAA9BA,SAA0CrB,IAAkB,GAAIc,GAAhEA,SAA4EQ,EAA5EA,WACEC,WAAY1B,gBCxEd,QAAA2B,2EAiDA,MAWAC,QAAAC,eAAAF,EAAAG,UAAA,OA/CGC,IAIH,WACA,MAJW3B,MAAM4B,MAGdC,IAAA,SAOHC,GACA,GAAAC,GAPc/B,KAAM4B,IAQZ5B,MAPE4B,KAOVE,EACAC,IAPgB/B,KAAM4B,MAAO5B,KAO7BgC,gBACUhC,KAAVE,OAPmB+B,mHAmBnBC,YAAA,EACIC,cAAJ,IAKAZ,EAAAG,UAAAU,mBAXwB,WAExBpC,KAAAgC,gBAAA,GAYAT,6DARAc,YAcEnB,QAdFnB,EAAAuC,YAAAf,IAEAgB,MAAAC,QAAA,OAcAC,SAAA,UCxDiClB,EAAjCZ,eAAiC,WAAjC,UAAAY,EAAAmB,gBACAxC,SAAAO,KAASkC,EAATA,OAAA5B,MAAA,eACAT,MAAAG,KAAAmC,EAAAA,MAAA7B,MACkB,SAClB,IAAA8B,GAAA,WACA,QAAAA,MAEA,MAAAA,wDAIAC,cAAAvB,eClCAL,QAAAF,EAAAsB,YAAAjB,EAAAA"}