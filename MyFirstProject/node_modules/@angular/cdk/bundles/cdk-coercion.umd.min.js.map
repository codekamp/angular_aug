{"version":3,"file":"cdk-coercion.umd.min.js","sources":["../../src/cdk/coercion/boolean-property.ts","../../src/cdk/coercion/number-property.ts"],"sourcesContent":["\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nexport function coerceBooleanProperty(value: any): boolean {\n  return value != null && `${value}` !== 'false';\n}\n","\n/**\n * Coerces a data-bound value (typically a string) to a number.\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nexport function coerceNumberProperty(value: any, fallbackValue = 0) {\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return isNaN(parseFloat( /** @type {?} */((value as any)))) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\n"],"names":["coerceBooleanProperty","value","fallbackValue","isNaN","parseFloat","Number"],"mappings":";;;;;;;0PAMA,SAAAA,GAGCC,GAFC,MAGgB,OAATA,GAAiB,GAH1BA,GAGyC,wBCCvC,WAJF,KAAAC,IAAAA,EAAA,GAMSC,MAAMC,WAFf,KAE4CD,MAAME,OAAOJ,IAAUC,EAAgBG,OAAOJ"}