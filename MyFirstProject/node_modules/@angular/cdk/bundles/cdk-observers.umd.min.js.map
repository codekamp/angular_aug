{"version":3,"file":"cdk-observers.umd.min.js","sources":["../../src/cdk/observers/observe-content.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  ElementRef,\n  NgModule,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  AfterContentInit,\n  Injectable,\n  NgZone,\n} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {RxChain, debounceTime} from '@angular/cdk/rxjs';\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nexport class MdMutationObserverFactory {\n/**\n * @param {?} callback\n * @return {?}\n */\ncreate(callback): MutationObserver | null {\n    return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdMutationObserverFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMutationObserverFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMutationObserverFactory.ctorParameters;\n}\n\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nexport class ObserveContent implements AfterContentInit, OnDestroy {\nprivate _observer: MutationObserver | null;\n/**\n * Event emitted for each change in the element's content.\n */\nevent = new EventEmitter<MutationRecord[]>();\n/**\n * Used for debouncing the emitted values to the observeContent event.\n */\nprivate _debouncer = new Subject<MutationRecord[]>();\n/**\n * Debounce interval for emitting the changes.\n */\ndebounce: number;\n/**\n * @param {?} _mutationObserverFactory\n * @param {?} _elementRef\n * @param {?} _ngZone\n */\nconstructor(\nprivate _mutationObserverFactory: MdMutationObserverFactory,\nprivate _elementRef: ElementRef,\nprivate _ngZone: NgZone) { }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    if (this.debounce > 0) {\n      this._ngZone.runOutsideAngular(() => {\n        RxChain.from(this._debouncer)\n          .call(debounceTime, this.debounce)\n          .subscribe((mutations: MutationRecord[]) => this.event.emit(mutations));\n      });\n    } else {\n      this._debouncer.subscribe(mutations => this.event.emit(mutations));\n    }\n\n    this._observer = this._ngZone.runOutsideAngular(() => {\n      return this._mutationObserverFactory.create((mutations: MutationRecord[]) => {\n        this._debouncer.next(mutations);\n      });\n    });\n\n    if (this._observer) {\n      this._observer.observe(this._elementRef.nativeElement, {\n        characterData: true,\n        childList: true,\n        subtree: true\n      });\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n\n    this._debouncer.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkObserveContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdMutationObserverFactory, },\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'event': [{ type: Output, args: ['cdkObserveContent', ] },],\n'debounce': [{ type: Input },],\n};\n}\n\nfunction ObserveContent_tsickle_Closure_declarations() {\n/** @type {?} */\nObserveContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nObserveContent.ctorParameters;\n/** @type {?} */\nObserveContent.propDecorators;\n/** @type {?} */\nObserveContent.prototype._observer;\n/**\n * Event emitted for each change in the element's content.\n * @type {?}\n */\nObserveContent.prototype.event;\n/**\n * Used for debouncing the emitted values to the observeContent event.\n * @type {?}\n */\nObserveContent.prototype._debouncer;\n/**\n * Debounce interval for emitting the changes.\n * @type {?}\n */\nObserveContent.prototype.debounce;\n/** @type {?} */\nObserveContent.prototype._mutationObserverFactory;\n/** @type {?} */\nObserveContent.prototype._elementRef;\n/** @type {?} */\nObserveContent.prototype._ngZone;\n}\n\nexport class ObserversModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [ObserveContent],\n  declarations: [ObserveContent],\n  providers: [MdMutationObserverFactory]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ObserversModule_tsickle_Closure_declarations() {\n/** @type {?} */\nObserversModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nObserversModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["MdMutationObserverFactory","prototype","create","callback","MutationObserver","decorators","ObserveContent","_mutationObserverFactory","_elementRef","_ngZone","this","ngAfterContentInit","_this","debounce","runOutsideAngular","RxChain","from","_debouncer","call","debounceTime","subscribe","mutations","event","emit","_observer","next","observe","nativeElement","characterData","childList","subtree","ngOnDestroy","disconnect","complete","ctorParameters","type","ElementRef","NgZone","propDecorators","Input","ObserversModule","declarations"],"mappings":";;;;;;;kbA2BA,QAAAA,MAKA,MACAA,GAAAC,UAAAC,OAAA,SAAAC,GACA,MAAA,mBAAAC,kBAAA,KAAA,GAAAA,kBAAAD,IAFAH,IAKAA,GAAAK,wFAsBA,QAAAC,GAAAC,EAAAC,EAAAC,GACYC,KAAZH,yBAAAA,gGA8DA,MAnCAD,GAAAL,UAAAU,mBAAA,WACA,GAAAC,GAAAF,IACAA,MAAAG,SAAA,EACAH,KAAAD,QAAAK,kBAAA,WACAC,EAAAA,QAAAC,KAAAJ,EAAAK,YACAC,KAAAC,EAAAA,aAAAP,EAAAC,UAvBAO,UAAA,SAAAC,GAAA,MAAAT,GAAAU,MAAAC,KAAAF,OA4BMX,KAANO,WAAAG,UAAA,SAvBmBC,GAuBnB,MAAAT,GAAAU,MAAAC,KAAAF,KAEAX,KAAOc,UAAPd,KAAAD,QAAAK,kBAAA,WACA,MAAAF,GAAAL,yBAAAL,OAAA,SAAAmB,GArBST,EAuBTK,WAAAQ,KAAAJ,OAGAX,KAAAc,WACAd,KAAAc,UAAAE,QAAAhB,KAAAF,YAAAmB,eACAC,eAAA,EACAC,WAAA,EACAC,SAAA,KAOAxB,EAAAL,UAAA8B,YAAA,WAEQrB,KAARc,WACAd,KAAAc,UAAAQ,aAxBAtB,KAAAO,WAAAgB,YA2BA3B,IAEAA,GAAAD,wEAQAC,EAAA4B,eAAA,WAAA,QA1BAC,KAAAnC,IA4BAmC,KAAAC,EAAAA,aACAD,KAAAE,EAAAA,UAIA/B,EAAAgC,mEAzBAzB,WAAAsB,KAAAI,EAAAA,QA8DA,IAAAC,GAAS,WACT,QAAAA,MAEA,MAAAA,wDAzDAC,cAAAnC"}